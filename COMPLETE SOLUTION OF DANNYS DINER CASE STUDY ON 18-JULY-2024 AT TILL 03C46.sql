#PROJECT: DANNYS_DINER

CREATE DATABASE DANNYS_DINER;

USE DANNYS_DINER;

CREATE TABLE SALES(
CUSTOMER_ID VARCHAR(1),
ORDER_DATE DATE,
PRODUCT_ID INT
);

INSERT INTO SALES
(CUSTOMER_ID, ORDER_DATE, PRODUCT_ID)
VALUES
("A",20210101,1),
("A",20210101,2),
("A",20210107,2),
("A",20210110,3),
("A",20210111,3),
("A",20210111,3),
("B",20210101,2),
("B",20210102,2),
("B",20210104,1),
("B",20210111,1),
("B",20210116,3),
("B",20210101,3),
("C",20210101,3),
("C",20210101,3),
("C",20210107,3);

CREATE TABLE MEMBERS(
CUSTOMER_ID VARCHAR(1),
JOIN_DATE TIMESTAMP
);

INSERT INTO MEMBERS
(CUSTOMER_ID, JOIN_DATE)
VALUES
("A",20210107),
("B",20210109);

CREATE TABLE MENU(
PRODUCT_ID INT,
PRODUCT_NAME VARCHAR(5),
PRICE INT
);

INSERT INTO MENU
(PRODUCT_ID, PRODUCT_NAME, PRICE)
VALUES
(1,"SUSHI",10),
(2,"CURRY",15),
(3,"RAMEN",12);


-- QUERY.1: WHAT IS THE TOTAL AMOUNT EACH CUSTOMER SPENT AT THE RESTAURANT?
SELECT S.CUSTOMER_ID, SUM(M.PRICE) AS TOTAL_SPENT
FROM SALES AS S
JOIN MENU AS M
ON S.PRODUCT_ID = M.PRODUCT_ID
GROUP BY S.CUSTOMER_ID;

-- QUERY.2: HOW MANY DAYS HAS EACH CUSTOMER VISITED THE RESTAURANT?
SELECT CUSTOMER_ID, COUNT(DISTINCT(ORDER_DATE)) AS DAYS
FROM SALES 
GROUP BY CUSTOMER_ID;

-- QUERY.3: WHAT WAS THE FIRST ITEM FROM THE MENU PURCHASED BY EACH CUSTOMER?
SELECT S.CUSTOMER_ID, S.PRODUCT_ID, M.PRODUCT_NAME, S.ORDER_DATE
FROM SALES AS S
JOIN MENU AS M
ON S.PRODUCT_ID=M.PRODUCT_ID
ORDER BY S.ORDER_DATE ASC 
LIMIT 1;

-- QUERY.4: WHAT IS THE MOST PURCHASED ITEM ON THE MENU AND HOW MANY TIMES WAS IT PURCHASED BY ALL CUSTOMERS?
SELECT M.PRODUCT_NAME, COUNT(S.ORDER_DATE) AS MOST_PURCHASED_ITEM
FROM MENU AS M
JOIN SALES AS S
ON M.PRODUCT_ID=S.PRODUCT_ID
GROUP BY M.PRODUCT_NAME
ORDER BY COUNT(S.ORDER_DATE) DESC;

-- QUERY.5: WHICH ITEM WAS THE MOST POPULAR FOR EACH CUSTUMER?
SELECT S.CUSTOMER_ID, M.PRODUCT_NAME, COUNT(M.PRODUCT_NAME) AS MOST_POPULAR_ITEM
FROM SALES AS S
JOIN MENU AS M
ON S.PRODUCT_ID=M.PRODUCT_ID
GROUP BY S.CUSTOMER_ID, M.PRODUCT_NAME
ORDER BY S.CUSTOMER_ID, COUNT(M.PRODUCT_NAME) DESC;

-- QUERY.6: WHICH ITEM WAS PURCHASED FIRST BY THE CUSTOMER AFTER THEY BECAME A MEMBER?
SELECT MM.CUSTOMER_ID, MM.JOIN_DATE, S.ORDER_DATE, M.PRODUCT_ID, M.PRODUCT_NAME
FROM MEMBERS AS MM
JOIN SALES AS S
ON MM.CUSTOMER_ID=S.CUSTOMER_ID
JOIN MENU AS M
ON S.PRODUCT_ID=M.PRODUCT_ID
WHERE S.ORDER_DATE>=MM.JOIN_DATE
ORDER BY S.ORDER_DATE, MM.CUSTOMER_ID;

-- QUERY.7: WHICH ITEM WAS PURCHASED JUST BEFORE THE CUSTOMER BECAME A MEMBER?
SELECT MM.CUSTOMER_ID, MM.JOIN_DATE, S.ORDER_DATE, M.PRODUCT_ID, M.PRODUCT_NAME
FROM MEMBERS AS MM
JOIN SALES AS S
ON MM.CUSTOMER_ID=S.CUSTOMER_ID
JOIN MENU AS M
ON S.PRODUCT_ID=M.PRODUCT_ID
WHERE S.ORDER_DATE<MM.JOIN_DATE
ORDER BY S.ORDER_DATE, MM.CUSTOMER_ID;

-- QUERY.8: WHAT IS THE TOTAL ITEMS AND AMOUNT SPENT FOR EACH MEMBER BEFORE THEY BECAME A MEMBER?
SELECT MM.CUSTOMER_ID, COUNT(S.ORDER_DATE) AS TOTAL_ITEM, SUM(M.PRICE) AS TOTAL_SPENT
FROM MEMBERS AS MM
JOIN SALES AS S 
ON MM.CUSTOMER_ID=S.CUSTOMER_ID
JOIN MENU AS M
ON S.PRODUCT_ID=M.PRODUCT_ID
WHERE S.ORDER_DATE<MM.JOIN_DATE
GROUP BY MM.CUSTOMER_ID;

-- QUERY.9: IF EACH $1 SPENT EQUTES TO 10 POINTS AND SUSHI HAS A 2X POINTS MULTIPLIER- HOW MANY POINTS WOULD EACH CUSTOMER HAVE?
SELECT CUSTOMER_ID, SUM(CASE WHEN PRODUCT_NAME = "SUSHI" THEN PRICE * 10 * 2 
ELSE PRICE * 10
END) AS POINTS
FROM MENU AS M
JOIN SALES AS S
ON M.PRODUCT_ID=S.PRODUCT_ID
GROUP BY CUSTOMER_ID;

-- QUERY.10: IN THE FIRST WEEK AFTER A CUSTOMER JOINS THE PROGRAM (INCLUDING THEIR JOIN DATE) THEY EARN 2X POINTS ON ALL ITEMS, NOT JUST SUSHI - HOW MANY POINTS DO CUSTOMER A AND B HAVE AT THE END OF JANUARY?
SELECT S.CUSTOMER_ID, CASE WHEN PRODUCT_NAME = "SUSHI" THEN PRICE * 10 * 2 
ELSE PRICE * 10
END AS POINTS, S.ORDER_DATE, MM.JOIN_DATE AS MEMBERSHIP_START
FROM MENU AS M
JOIN SALES AS S
ON M.PRODUCT_ID=S.PRODUCT_ID
JOIN MEMBERS AS MM
ON S.CUSTOMER_ID=MM.CUSTOMER_ID
